# Taller de Estadística Descriptiva con R para Ingeniería Agropecuaria

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
```

## Instrucciones

1. Este taller está diseñado para realizarse en RStudio utilizando Quarto (archivo .qmd)
2. Complete los ejercicios marcados con "EJERCICIO" reemplazando los `___` por el código o respuestas adecuadas
3. Ejecute cada chunk de código para ver los resultados
4. Al finalizar, genere un reporte en HTML o PDF desde Quarto

## Carga de paquetes necesarios

```{r}
library(tidyverse)   # Manipulación y visualización de datos
library(readxl)      # Lectura de archivos Excel
library(agricolae)   # Paquete para análisis agrícolas
library(knitr)       # Para tablas formateadas
```

## 1. Introducción a datos agropecuarios

Vamos a trabajar con un conjunto de datos simulados de producción de maíz bajo diferentes tratamientos de fertilización.

```{r}
# Creación de datos simulados
set.seed(123)
datos_maiz <- data.frame(
  Tratamiento = rep(c("Control", "NPK", "Orgánico", "NPK+Org"), each = 10),
  Rendimiento = c(rnorm(10, mean = 3.5, sd = 0.5),
                  rnorm(10, mean = 5.2, sd = 0.6),
                  rnorm(10, mean = 4.8, sd = 0.4),
                  rnorm(10, mean = 5.5, sd = 0.5)),
  PH = c(rnorm(10, mean = 6.0, sd = 0.3),
         rnorm(10, mean = 6.5, sd = 0.2),
         rnorm(10, mean = 6.8, sd = 0.3),
         rnorm(10, mean = 6.3, sd = 0.4))
```

## 2. Estadísticas descriptivas básicas

EJERCICIO 1: Calcule las estadísticas descriptivas para el rendimiento por tratamiento usando la función `summary()` y `group_by()`.

```{r}
# Complete el código
estadisticas <- datos_maiz %>%
  group_by(___) %>%
  summarise(
    Media = mean(___),
    Mediana = median(___),
    SD = sd(___),
    Min = min(___),
    Max = max(___),
    n = n()
  )

kable(estadisticas, caption = "Estadísticas descriptivas por tratamiento")
```

## 3. Visualización de datos

EJERCICIO 2: Cree un boxplot que muestre la distribución del rendimiento por tratamiento.

```{r}
# Complete el código
ggplot(datos_maiz, aes(x = ___, y = ___, fill = ___)) +
  geom_boxplot() +
  labs(title = "Rendimiento de maíz por tratamiento de fertilización",
       x = "Tratamiento",
       y = "Rendimiento (ton/ha)") +
  theme_minimal()
```

## 4. Relación entre variables

EJERCICIO 3: Explore la relación entre el pH del suelo y el rendimiento usando un diagrama de dispersión.

```{r}
# Complete el código
ggplot(datos_maiz, aes(x = ___, y = ___)) +
  geom_point(aes(color = ___)) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(title = "Relación entre pH del suelo y rendimiento",
       x = "pH del suelo",
       y = "Rendimiento (ton/ha)") +
  theme_minimal()
```

## 5. Análisis por grupos

EJERCICIO 4: Calcule el coeficiente de variación (CV) para cada tratamiento. El CV se calcula como (desviación estándar/media)*100.

```{r}
# Complete el código
cv_rendimiento <- datos_maiz %>%
  group_by(___) %>%
  summarise(
    Media = mean(___),
    SD = sd(___),
    CV = (___/___) * 100
  )

kable(cv_rendimiento, caption = "Coeficiente de variación por tratamiento")
```

## 6. Exportación de resultados

EJERCICIO 5: Exporte la tabla de estadísticas descriptivas a un archivo CSV.

```{r}
# Complete el código
write.csv(___, file = "estadisticas_rendimiento.csv", row.names = ___)
```

## 7. Preguntas de interpretación

1. ¿Qué tratamiento mostró el mayor rendimiento promedio?
   
   RESPUESTA: ___

2. Según el coeficiente de variación, ¿qué tratamiento presentó mayor variabilidad relativa en los rendimientos?

   RESPUESTA: ___

3. ¿Qué relación observa entre el pH del suelo y el rendimiento según el diagrama de dispersión?

   RESPUESTA: ___

## 8. Reto adicional (Opcional)

EJERCICIO 6: Cree una función personalizada que calcule la media recortada al 10% para los datos de rendimiento.

```{r}
# Complete la función
media_recortada <- function(x) {
  x <- sort(x)
  n <- length(x)
  k <- round(n * ___)
  mean(x[___:___])
}

# Aplíquela por tratamiento
datos_maiz %>%
  group_by(___) %>%
  summarise(Media_recortada = media_recortada(___))
```

## Soluciones

```{r, eval=FALSE, echo=FALSE}
# EJERCICIO 1
estadisticas <- datos_maiz %>%
  group_by(Tratamiento) %>%
  summarise(
    Media = mean(Rendimiento),
    Mediana = median(Rendimiento),
    SD = sd(Rendimiento),
    Min = min(Rendimiento),
    Max = max(Rendimiento),
    n = n()
  )

# EJERCICIO 2
ggplot(datos_maiz, aes(x = Tratamiento, y = Rendimiento, fill = Tratamiento)) +
  geom_boxplot() +
  labs(title = "Rendimiento de maíz por tratamiento de fertilización",
       x = "Tratamiento",
       y = "Rendimiento (ton/ha)") +
  theme_minimal()

# EJERCICIO 3
ggplot(datos_maiz, aes(x = PH, y = Rendimiento)) +
  geom_point(aes(color = Tratamiento)) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(title = "Relación entre pH del suelo y rendimiento",
       x = "pH del suelo",
       y = "Rendimiento (ton/ha)") +
  theme_minimal()

# EJERCICIO 4
cv_rendimiento <- datos_maiz %>%
  group_by(Tratamiento) %>%
  summarise(
    Media = mean(Rendimiento),
    SD = sd(Rendimiento),
    CV = (SD/Media) * 100
  )

# EJERCICIO 5
write.csv(estadisticas, file = "estadisticas_rendimiento.csv", row.names = FALSE)

# EJERCICIO 6
media_recortada <- function(x) {
  x <- sort(x)
  n <- length(x)
  k <- round(n * 0.1)
  mean(x[(k+1):(n-k)])
}

datos_maiz %>%
  group_by(Tratamiento) %>%
  summarise(Media_recortada = media_recortada(Rendimiento))
```

---

Para usar este taller:

1. Abra RStudio y cree un nuevo archivo Quarto (.qmd)
2. Copie todo el contenido de este documento
3. Guarde el archivo con extensión .qmd
4. Complete los ejercicios marcados
5. Ejecute los chunks de código y genere el reporte final

Puede personalizar los datos, ejercicios o agregar más secciones según las necesidades específicas de su curso de Ingeniería Agropecuaria.